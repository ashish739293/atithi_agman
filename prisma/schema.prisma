generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int       @id @default(autoincrement())
  name       String?   @db.Text
  email      String?   @default("0")
  username   String?   @unique(map: "username") @default("0")
  password   String?   @default("0")
  mobile     String?   @default("0")
  type       String?   @default("0")
  pincode    Int?      @default(0)
  address_1  String?   @default("NA")
  address_2  String?   @default("NA")
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  events     events[]
  guest_lists     guest_lists[]
}

model events {
  id        Int      @id @default(autoincrement())
  user_id   Int
  username   String?
  title     String   
  total_send   Int?        @default(0)
  total_receive   Int?     @default(0)
  date      DateTime 
  filePath  String   
  link  String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      users    @relation(fields: [user_id], references: [id])

  guest_lists     guest_lists[]

  @@index([user_id])
}


model guest_lists {
  id         Int       @id @default(autoincrement())
  user_id    Int
  event_id   Int
  name       String
  mobile     String    
  send       Int      @default(0)
  receive    Int      @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Relations
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  event      events    @relation(fields: [event_id], references: [id], onDelete: Cascade)

  // Indexes
  @@index([user_id])
  @@index([event_id])
}


model contact_data {
  id         Int      @id @default(autoincrement())
  name       String   @default("")
  mobile     String   @default("") @db.VarChar(20)
  message    String   @db.Text
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
